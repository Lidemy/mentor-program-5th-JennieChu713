{"version":3,"sources":["GamePositionContext.js","components/Go/GoSpot.js","components/Board/Board.js","components/GameComponents.js","useGame.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["GamePositionContext","createContext","ChestField","styled","div","BlackGo","WhiteGo","GoSpot","position","useState","goValue","setGoValue","useContext","blackIsNext","setBlackIsNext","steps","setSteps","winner","join","onClick","e","target","getAttribute","pos","split","map","i","Number","setAttribute","BoardContainer","section","BoardSquare","article","BoardRow","positions","j","push","positionList","BoardSquares","rowGroup","structure","length","BoardRows","group","slice","Board","GameTitle","h1","GameWrapper","main","GameStepsTitle","h2","GameSteps","GameStepsPresent","GameStepsWrapper","GameStepsContent","slopeLineExpect","coordinate","direction","y","x","spotsCombo","xSpot","linearLineExpect","checkWinner","goSpots","sort","crossRightCombo","crossLeftCombo","horizontalCombo","verticalCombo","undefined","crossRightFit","crossLeftFit","horizontalFit","verticalFit","k","compare","useGame","setWinner","useEffect","black","white","blackWin","whiteWin","alert","victoryJudge","App","Provider","value","step","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ec3cfdb.chunk.js","sourcesContent":["import { createContext } from \"react\";\nexport const GamePositionContext = createContext();\n","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { GamePositionContext } from \"../../GamePositionContext\";\n\nconst ChestField = styled.div`\n  box-sizing: border-box;\n  width: 60%;\n  height: 60%;\n  display: hidden;\n  position: relative;\n  top: -30%;\n  left: -30%;\n  text-align: center;\n`;\n\nconst BlackGo = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: black;\n  position: absolute;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  right: 0;\n  top: 0;\n`;\n\nconst WhiteGo = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: white;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  position: absolute;\n  right: 0;\n  top: 0;\n`;\n\nexport default function GoSpot({ position }) {\n  const [goValue, setGoValue] = useState(null);\n  const { blackIsNext, setBlackIsNext, steps, setSteps, winner } =\n    useContext(GamePositionContext);\n  const handleGoClick = (e) => {\n    const isOccupied = e.target.getAttribute(\"data-occupied\");\n    if (isOccupied === \"false\" && !winner) {\n      const pos = e.target.getAttribute(\"data-position\");\n      setSteps([...steps, pos.split(\"-\").map((i) => Number(i))]);\n      setGoValue(blackIsNext ? <BlackGo /> : <WhiteGo />);\n      setBlackIsNext(!blackIsNext);\n      e.target.setAttribute(\"data-occupied\", true);\n    }\n  };\n\n  return (\n    <ChestField\n      data-position={position.join(\"-\")}\n      data-occupied=\"false\"\n      onClick={handleGoClick}\n    >\n      {goValue}\n    </ChestField>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GoSpot from \"../Go/GoSpot\";\n\n// chest board\nconst BoardContainer = styled.section`\n  margin: 2rem 0;\n`;\nconst BoardSquare = styled.article`\n  border-left: 1px solid #333333;\n  border-top: 1px solid #333333;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:last-child {\n    border-right: 1px solid transparent;\n    border-top: 1px solid transparent;\n    background-color: rgb(229, 227, 203);\n  }\n`;\n\nconst BoardRow = styled.section`\n  display: flex;\n  background-color: #9d896c;\n\n  &:last-child ${BoardSquare} {\n    border-left: 1px solid transparent;\n    background-color: rgb(229, 227, 203);\n  }\n`;\n\nfunction positionList() {\n  const position = [];\n  for (let i = 0; i < 19; i++) {\n    for (let j = 0; j < 19; j++) {\n      position.push([i, j]);\n    }\n  }\n  return position;\n}\n\nconst positions = positionList();\n\nconst BoardSquares = ({ rowGroup }) => {\n  const structure = [];\n  for (let i = 0; i < rowGroup.length; i++) {\n    structure.push(\n      <BoardSquare key={`square-${rowGroup[i].join(\"\")}`}>\n        <GoSpot position={rowGroup[i]} />\n      </BoardSquare>\n    );\n  }\n  return <>{structure}</>;\n};\n\nconst BoardRows = () => {\n  const structure = [];\n  for (let i = 0; i < positions.length; i += 19) {\n    const group = positions.slice(i, i + 19);\n    structure.push(\n      <BoardRow key={`row-${i}`}>\n        <BoardSquares rowGroup={group} />\n      </BoardRow>\n    );\n  }\n  return <>{structure}</>;\n};\n\nexport default function Board() {\n  return (\n    <BoardContainer>\n      <BoardRows />\n    </BoardContainer>\n  );\n}\n","import styled from \"styled-components\";\n\nconst GameTitle = styled.h1`\n  text-align: center;\n`;\nconst GameWrapper = styled.main`\n  display: flex;\n  justify-content: space-around;\n  background-color: rgba(204, 199, 145, 0.5);\n  height: 100vh;\n`;\n\n// Game Progress\nconst GameStepsTitle = styled.h2`\n  text-align: center;\n`;\n\nconst GameSteps = styled.section`\n  width: 40%;\n  &:not(${GameStepsTitle}) {\n    text-align: start;\n  }\n`;\n\nconst GameStepsPresent = styled.div`\n  font-size: 1.4rem;\n  font-weight: 700;\n  text-decoration: underline;\n  margin-bottom: 2rem;\n`;\n\nconst GameStepsWrapper = styled.section`\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nconst GameStepsContent = styled.div`\n  margin-left: 2rem;\n  margin-bottom: 1.5rem;\n`;\n\nexport default function gameComponents() {\n  return {\n    GameTitle,\n    GameWrapper,\n    GameStepsTitle,\n    GameSteps,\n    GameStepsPresent,\n    GameStepsWrapper,\n    GameStepsContent,\n  };\n}\n","import { useEffect, useState } from \"react\";\n\n// crossline expect combo\nfunction slopeLineExpect(coordinate, direction = \"decrease-x\") {\n  const [y, x] = coordinate;\n  const spotsCombo = [];\n  for (let i = 0; i < 5; i++) {\n    let xSpot =\n      (direction === \"decrease-x\" && x - i) ||\n      (direction === \"increase-x\" && x + i);\n    if (!xSpot) {\n      return;\n    }\n    spotsCombo.push(`${y + i}-${xSpot}`);\n  }\n  return spotsCombo;\n}\n// linearline expect combo\nfunction linearLineExpect(coordinate, direction = \"horizontal\") {\n  const [y, x] = coordinate;\n  const spotsCombo = [];\n  for (let i = 0; i < 5; i++) {\n    if (direction === \"horizontal\") {\n      spotsCombo.push(`${y}-${x + i}`);\n    } else if (direction === \"vertical\") {\n      spotsCombo.push(`${y + i}-${x}`);\n    } else {\n      return;\n    }\n  }\n  return spotsCombo;\n}\n\nfunction checkWinner(goSpots) {\n  goSpots.sort();\n\n  for (let i = 0; i < goSpots.length; i++) {\n    const crossRightCombo = slopeLineExpect(goSpots[i], \"increase-x\");\n    const crossLeftCombo = slopeLineExpect(goSpots[i], \"decrease-x\");\n    const horizontalCombo = linearLineExpect(goSpots[i], \"horizontal\");\n    const verticalCombo = linearLineExpect(goSpots[i], \"vertical\");\n\n    if (\n      crossRightCombo === undefined ||\n      crossLeftCombo === undefined ||\n      horizontalCombo === undefined ||\n      verticalCombo === undefined\n    ) {\n      break;\n    }\n\n    const crossRightFit = [];\n    const crossLeftFit = [];\n    const horizontalFit = [];\n    const verticalFit = [];\n    for (let j = 0; j < 5; j++) {\n      for (let k = 0; k < goSpots.length; k++) {\n        const compare = goSpots[k].join(\"-\");\n        if (crossRightCombo[j] === compare) {\n          crossRightFit.push(compare);\n        }\n        if (crossLeftCombo[j] === compare) {\n          crossLeftFit.push(compare);\n        }\n        if (horizontalCombo[j] === compare) {\n          horizontalFit.push(compare);\n        }\n        if (verticalCombo[j] === compare) {\n          verticalFit.push(compare);\n        }\n      }\n    }\n    if (\n      crossRightFit.length === 5 ||\n      crossLeftFit.length === 5 ||\n      horizontalFit.length === 5 ||\n      verticalFit.length === 5\n    ) {\n      return true;\n    }\n  }\n  return null;\n}\n\nexport default function useGame() {\n  const [blackIsNext, setBlackIsNext] = useState(true);\n  const [steps, setSteps] = useState([]);\n  const [winner, setWinner] = useState(null);\n\n  //victory judge function\n  function victoryJudge() {\n    const black = [];\n    const white = [];\n    for (let i = 0; i < steps.length; i++) {\n      if (i % 2) {\n        white.push(steps[i]);\n      } else {\n        black.push(steps[i]);\n      }\n    }\n    const blackWin = checkWinner(black);\n    const whiteWin = checkWinner(white);\n    if (blackWin) {\n      setWinner(\"Black\");\n      alert(\"Black Won\");\n    } else if (whiteWin) {\n      setWinner(\"White\");\n      alert(\"white Won\");\n    }\n  }\n\n  useEffect(() => {\n    if (steps.length > 8 && !winner) {\n      victoryJudge();\n    }\n  }, [steps]);\n\n  return {\n    blackIsNext,\n    setBlackIsNext,\n    steps,\n    setSteps,\n    winner,\n    setWinner,\n  };\n}\n","import React from \"react\";\nimport { GamePositionContext } from \"../../GamePositionContext\";\nimport Board from \"../Board\";\nimport gameComponents from \"../GameComponents\";\nimport useGame from \"../../useGame\";\n\n//CSS in JS\nconst {\n  GameTitle,\n  GameWrapper,\n  GameStepsTitle,\n  GameSteps,\n  GameStepsPresent,\n  GameStepsWrapper,\n  GameStepsContent,\n} = gameComponents();\n\n// render\nfunction App() {\n  const { setBlackIsNext, blackIsNext, steps, setSteps, winner } = useGame();\n\n  return (\n    <>\n      <GameTitle>Gomoku Game</GameTitle>\n      <GameWrapper>\n        <GamePositionContext.Provider\n          value={{ blackIsNext, setBlackIsNext, steps, setSteps, winner }}\n        >\n          <Board />\n          <GameSteps>\n            <GameStepsTitle>Progress</GameStepsTitle>\n            <GameStepsPresent>\n              {!winner\n                ? `Present Move : ${blackIsNext ? \"Black\" : \"White\"}`\n                : `Winner: ${winner}`}\n            </GameStepsPresent>\n            <GameStepsWrapper>\n              {steps.map((step, index) => (\n                <GameStepsContent key={`step-${index + 1}`}>\n                  {`${index + 1}. ${\n                    (index + 1) % 2 ? \"Black\" : \"White\"\n                  } Move on: ${step.join(\"-\")}`}\n                </GameStepsContent>\n              ))}\n              {winner && (\n                <GameStepsContent>{`${winner} Won!`}</GameStepsContent>\n              )}\n            </GameStepsWrapper>\n          </GameSteps>\n        </GamePositionContext.Provider>\n      </GameWrapper>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}