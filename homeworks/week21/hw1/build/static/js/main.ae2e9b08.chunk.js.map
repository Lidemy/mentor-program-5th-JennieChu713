{"version":3,"sources":["components/Todos/TodosForm/TodosForm.js","components/Todos/TodosList/TodosStatus/TodosStatus.js","components/Todos/TodosList/TodoItem/TodoItem.js","FilterBtnsContext.js","components/Todos/TodoFilters/TodoFilters.js","useTodos.js","components/App/App.js","components/GeneralComponents.js","reportWebVitals.js","index.js"],"names":["TodoFormContainer","styled","section","TodoFormInput","input","TodFormSubmit","button","TodoListForm","handleChange","handleAddTodo","value","onChange","type","placeholder","onClick","TodoListTotal","div","TodoListStatusManual","total","done","undone","TodoItemContainer","TodoItemContent","TodoItemDetail","article","props","$isDone","TodoItemEditContent","TodoItemEditInput","TodoItemEditSubmit","TodoItemBtns","TodoItemBtnStatus","TodoItemBtnEdit","TodoItemBtnDelete","TodoListItem","todo","handleDeleteTodo","handleCompletionTodo","handleEditTodo","handleRenewTodo","handleEditChange","id","isEditing","isDone","$isEdit","defaultValue","content","FilterBtnsContext","createContext","TodoListFilterBtns","UndoneBtn","DoneBtn","AllBtn","ClearDoneBtn","ClearAllBtn","TodoFilters","useContext","handleUndoneTodos","handleDoneTodos","handleAllTodos","handleClearAllTodos","handleClearDoneTodos","useTodos","useRef","useState","todoData","window","localStorage","getItem","JSON","parse","length","current","todos","setTodos","setValue","editValue","setEditValue","useEffect","setItem","stringify","writeTodoLocalStorage","e","target","addTodo","filterStatus","deleteTodo","filter","getTodo","map","filterTodos","filterStatusTodos","Body","TodoListContainer","main","TodoListTitle","h1","TodoListout","App","Provider","allTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae2e9b08.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoFormContainer = styled.section`\n  border-bottom: 1px dotted rgba(157, 137, 108, 0.4);\n  padding-bottom: 3%;\n  margin-bottom: 4%;\n`;\n// const TodoFormGroup = styled.form``;// 因為 form本身的送出動作會直接重新render，除非使用 e.preventDefault 來防止送出\nconst TodoFormInput = styled.input`\n  margin: 0 2% 0 4%;\n  padding: 0 5px;\n  width: 80%;\n  height: 2rem;\n  border: none;\n  outline: none;\n  font-size: 1.5rem;\n  background-color: #f8f4e6;\n  border-radius: 5px;\n`;\nconst TodFormSubmit = styled.button`\n  font-size: 1.2rem;\n  color: #ca8269;\n  background: transparent;\n  border-radius: 50%;\n  border: 1px solid #ca8269;\n  height: 3rem;\n  width: 3rem;\n  padding-left: 4px;\n  transition: all 0.3s;\n\n  &:hover {\n    background: #ca8269;\n    color: white;\n  }\n`;\n// Todo form structure\nexport default function TodoListForm({ handleChange, handleAddTodo, value }) {\n  return (\n    <TodoFormContainer>\n      <TodoFormInput\n        onChange={handleChange}\n        type=\"text\"\n        placeholder={\"Add Todo ...\"}\n        value={value}\n      />\n      <TodFormSubmit onClick={handleAddTodo}>Add</TodFormSubmit>\n    </TodoFormContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoListTotal = styled.div`\n  font-size: 1.5rem;\n  margin: 5% 0;\n  color: #726250;\n\n  &::before {\n    content: \"— \";\n    opacity: 0.4;\n  }\n  &::after {\n    content: \" —\";\n    opacity: 0.4;\n  }\n`;\n\nexport default function TodoListStatusManual({ total, done, undone }) {\n  return (\n    <>\n      <TodoListTotal>\n        {done} Complete, {undone} Incomplete, {total} in Total.\n      </TodoListTotal>\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoItemContainer = styled.div`\n  border-radius: 500px;\n  margin: 0 auto 5%;\n  padding: 4% 3%;\n  font-size: 1.2rem;\n  width: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: rgba(248, 244, 230, 0.7);\n`;\nconst TodoItemContent = styled.div``;\nconst TodoItemDetail = styled.article`\n  ${(props) =>\n    props.$isDone && `text-decoration: line-through; color: #bc8f8f;`}\n`;\nconst TodoItemEditContent = styled.div`\n  display: flex;\n  * {\n    font-size: 1.1rem;\n  }\n`;\nconst TodoItemEditInput = styled.input`\n  width: 26rem;\n  border: none;\n  background: rgba(238, 232, 170, 0.5);\n  outline: none;\n  padding: 5px;\n  box-sizing: border-box;\n  margin-right: 2%;\n`;\nconst TodoItemEditSubmit = styled.button`\n  background: transparent;\n  border: none;\n  transition: all 0.3s;\n  border-radius: 5px;\n  color: #d7a98c;\n  &:hover {\n    background: #ee836f;\n    color: #fde8d0;\n  }\n`;\nconst TodoItemBtns = styled.div`\n  * {\n    font-size: 1.1rem;\n    background: transparent;\n    color: #d7a98c;\n    border: none;\n    border-radius: 5px;\n    transition: all 0.3s;\n  }\n`;\nconst TodoItemBtnStatus = styled.button`\n  &:hover {\n    background: #f39800;\n    color: #fff1cf;\n  }\n`;\nconst TodoItemBtnEdit = styled.button`\n  &:hover {\n    background: #ee836f;\n    color: #fde8d0;\n  }\n`;\nconst TodoItemBtnDelete = styled.button`\n  &:hover {\n    background: #c53d43;\n    color: #fde8d0;\n  }\n`;\nexport default function TodoListItem({\n  todo,\n  handleDeleteTodo,\n  handleCompletionTodo,\n  handleEditTodo,\n  handleRenewTodo,\n  handleEditChange,\n}) {\n  return (\n    <TodoItemContainer data-todo-id={todo.id}>\n      {todo.isEditing ? (\n        <TodoItemEditContent>\n          <TodoItemEditInput\n            type=\"text\"\n            id={todo.id}\n            $isDone={todo.isDone}\n            $isEdit={todo.isEditing}\n            defaultValue={todo.content}\n            onChange={handleEditChange}\n          />\n          <TodoItemEditSubmit\n            onClick={() => {\n              handleRenewTodo(todo.id);\n            }}\n          >\n            Edit\n          </TodoItemEditSubmit>\n        </TodoItemEditContent>\n      ) : (\n        <>\n          <TodoItemContent>\n            <TodoItemDetail\n              id={todo.id}\n              $isDone={todo.isDone}\n              $isEdit={todo.isEditing}\n            >\n              {todo.content}\n            </TodoItemDetail>\n          </TodoItemContent>\n          <TodoItemBtns>\n            <TodoItemBtnStatus\n              onClick={() => {\n                handleCompletionTodo(todo.id);\n              }}\n            >\n              {todo.isDone ? \"Undone\" : \"Done\"}\n            </TodoItemBtnStatus>\n            <TodoItemBtnEdit\n              onClick={() => {\n                handleEditTodo(todo.id);\n              }}\n            >\n              Edit\n            </TodoItemBtnEdit>\n            <TodoItemBtnDelete\n              onClick={() => {\n                handleDeleteTodo(todo.id);\n              }}\n            >\n              Delete\n            </TodoItemBtnDelete>\n          </TodoItemBtns>\n        </>\n      )}\n    </TodoItemContainer>\n  );\n}\n","import { createContext } from \"react\";\n\n// useContext for filter buttons\nexport const FilterBtnsContext = createContext();\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { FilterBtnsContext } from \"../../../FilterBtnsContext\";\n\nconst TodoListFilterBtns = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n  * {\n    font-size: 1.3rem;\n    background: transparent;\n    border-radius: 5px;\n    transition: all 0.3s;\n    color: #b39b6f;\n    border: none;\n    border-top: 1px solid #b39b6f;\n    border-bottom: 1px solid #b39b6f;\n  }\n`;\nconst UndoneBtn = styled.button`\n  &:hover {\n    color: #ede4cd;\n    background: #716246;\n    border-color: #716246;\n  }\n`;\nconst DoneBtn = styled.button`\n  &:hover {\n    background: #f39800;\n    color: #fff1cf;\n    border-color: #f39800;\n  }\n`;\nconst AllBtn = styled.button`\n  &:hover {\n    background: #74325c;\n    color: #fef4f4;\n    border-color: #74325c;\n  }\n`;\nconst ClearDoneBtn = styled.button`\n  &:hover {\n    background: #928c36;\n    color: #fdfdc4;\n    border-color: #928c36;\n  }\n`;\nconst ClearAllBtn = styled.button`\n  &:hover {\n    background: #c53d43;\n    color: #fde8d0;\n    border-color: #c53d43;\n  }\n`;\n\n// status filter buttons structure\nexport default function TodoFilters() {\n  const {\n    handleUndoneTodos,\n    handleDoneTodos,\n    handleAllTodos,\n    handleClearAllTodos,\n    handleClearDoneTodos,\n  } = useContext(FilterBtnsContext);\n\n  return (\n    <TodoListFilterBtns>\n      <UndoneBtn onClick={handleUndoneTodos}>Undone</UndoneBtn>\n      <DoneBtn onClick={handleDoneTodos}>Done</DoneBtn>\n      <AllBtn onClick={handleAllTodos}>All</AllBtn>\n      <ClearDoneBtn onClick={handleClearDoneTodos}>Clear Done</ClearDoneBtn>\n      <ClearAllBtn onClick={handleClearAllTodos}>Clear All</ClearAllBtn>\n    </TodoListFilterBtns>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\n\n// reserve todoList in localstorage\nfunction writeTodoLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nexport default function useTodos() {\n  // id initialize\n  const id = useRef(1);\n  // todos initialize\n  const [todos, setTodos] = useState(() => {\n    let todoData = window.localStorage.getItem(\"todos\") || \"\";\n    if (todoData) {\n      todoData = JSON.parse(todoData);\n      if (todoData.length && todoData[0].id) {\n        id.current = todoData[0].id + 1;\n      }\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n  // add todo value initialize\n  const [value, setValue] = useState(\"\");\n\n  // edit todo value initialize\n  const [editValue, setEditValue] = useState(\"\");\n\n  useEffect(() => {\n    writeTodoLocalStorage(todos);\n  }, [todos]);\n\n  // add todo functioning\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    if (e.target.value === \"\") {\n      return;\n    }\n    setValue(e.target.value);\n  };\n  const handleAddTodo = () => {\n    const addTodo = [\n      {\n        id: id.current,\n        content: value,\n        isDone: false,\n        isEditing: false,\n        filterStatus: \"all\",\n      },\n      ...todos,\n    ];\n    setTodos(addTodo);\n    id.current += 1;\n    setValue(\"\");\n  };\n\n  // delete todo functioning\n  const handleDeleteTodo = (id) => {\n    const deleteTodo = todos.filter((todo) => todo.id !== id);\n    setTodos(deleteTodo);\n  };\n\n  // checkout todo completion status functioning\n  const handleCompletionTodo = (id) => {\n    const getTodo = todos.map((todo) => {\n      if (todo.id !== id) return todo;\n      return {\n        ...todo,\n        isDone: !todo.isDone,\n      };\n    });\n    setTodos(getTodo);\n  };\n  // edit Todo item's content functioning\n  const handleEditTodo = (id) => {\n    const getTodo = todos.map((todo) => {\n      if (todo.id !== id) return todo;\n      return {\n        ...todo,\n        isEditing: !todo.isEditing,\n      };\n    });\n    setTodos(getTodo);\n  };\n  const handleEditChange = (e) => {\n    setEditValue(e.target.value);\n  };\n  const handleRenewTodo = (id) => {\n    const getTodo = todos.map((todo) => {\n      if (todo.id !== id) return todo;\n      return {\n        ...todo,\n        content: editValue || todo.content, // if editValue is blank (as false), return pre-state value\n        isEditing: false,\n      };\n    });\n    setValue(\"\");\n    setTodos(getTodo);\n  };\n\n  // filter buttons functions\n  // filterout Undone todos functioning\n  const handleUndoneTodos = () => {\n    const filterTodos = todos.map((todo) => ({\n      ...todo,\n      filterStatus: \"undone\",\n    }));\n    setTodos(filterTodos);\n  };\n  //filterout Done todos functioning\n  const handleDoneTodos = () => {\n    const filterTodos = todos.map((todo) => ({\n      ...todo,\n      filterStatus: \"done\",\n    }));\n    setTodos(filterTodos);\n  };\n  // listout all todos\n  const handleAllTodos = () => {\n    const filterTodos = todos.map((todo) => ({\n      ...todo,\n      filterStatus: \"all\",\n    }));\n    setTodos(filterTodos);\n  };\n  // clear all done todos\n  const handleClearDoneTodos = () => {\n    setTodos(todos.filter((todo) => !todo.isDone));\n  };\n  // clear all todos\n  const handleClearAllTodos = () => {\n    setTodos([]);\n  };\n\n  //todo filter render function\n  const filterStatusTodos = (todos) => {\n    if (todos.length) {\n      if (todos[0].filterStatus === \"undone\") {\n        return todos.filter((todo) => !todo.isDone);\n      }\n      if (todos[0].filterStatus === \"done\") {\n        return todos.filter((todo) => todo.isDone);\n      }\n      return todos;\n    }\n    return todos;\n  };\n  return {\n    todos,\n    value,\n    handleChange,\n    handleAddTodo,\n    handleDeleteTodo,\n    handleCompletionTodo,\n    handleEditTodo,\n    handleEditChange,\n    handleRenewTodo,\n    handleUndoneTodos,\n    handleDoneTodos,\n    handleAllTodos,\n    handleClearDoneTodos,\n    handleClearAllTodos,\n    filterStatusTodos,\n  };\n}\n","import React from \"react\";\nimport TodosForm from \"../Todos/TodosForm\";\nimport TodoStatus from \"../Todos/TodosList/TodosStatus\";\nimport TodoItem from \"../Todos/TodosList/TodoItem\";\nimport TodoFilters from \"../Todos/TodoFilters/TodoFilters\";\nimport useTodos from \"../../useTodos\";\nimport generalComponents from \"../GeneralComponents\";\nimport { FilterBtnsContext } from \"../../FilterBtnsContext\";\n\n// CSS in JS\n// general components\nconst { Body, TodoListContainer, TodoListTitle, TodoListout } =\n  generalComponents();\n\n// front render structure and render logics\nfunction App() {\n  const {\n    todos,\n    value,\n    handleChange,\n    handleAddTodo,\n    handleDeleteTodo,\n    handleCompletionTodo,\n    handleEditTodo,\n    handleEditChange,\n    handleRenewTodo,\n    handleUndoneTodos,\n    handleDoneTodos,\n    handleAllTodos,\n    handleClearDoneTodos,\n    handleClearAllTodos,\n    filterStatusTodos,\n  } = useTodos();\n\n  return (\n    <Body>\n      <TodoListContainer>\n        <TodoListTitle>Todo List</TodoListTitle>\n        <TodosForm\n          value={value}\n          handleChange={handleChange}\n          handleAddTodo={handleAddTodo}\n        />\n        <TodoListout>\n          <FilterBtnsContext.Provider\n            value={{\n              handleUndoneTodos,\n              handleDoneTodos,\n              handleAllTodos,\n              handleClearDoneTodos,\n              handleClearAllTodos,\n            }}\n          >\n            <TodoFilters />\n          </FilterBtnsContext.Provider>\n          <TodoStatus\n            total={todos.length}\n            done={todos.filter((todo) => todo.isDone).length}\n            undone={todos.filter((todo) => !todo.isDone).length}\n            allTodos={todos}\n          />\n          {filterStatusTodos(todos).map((todo) => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}\n              handleCompletionTodo={handleCompletionTodo}\n              handleEditTodo={handleEditTodo}\n              handleEditChange={handleEditChange}\n              handleRenewTodo={handleRenewTodo}\n            />\n          ))}\n        </TodoListout>\n      </TodoListContainer>\n    </Body>\n  );\n}\n\nexport default App;\n","import styled from \"styled-components\";\n\nexport default function generalComponents() {\n  const Body = styled.div`\n    background-color: #ede4cd;\n    display: flex;\n    justify-content: column;\n    height: 100vh;\n  `;\n\n  const TodoListContainer = styled.main`\n    width: 70%;\n    margin: 5% auto;\n    text-align: center;\n    border-top: 6px double rgba(248, 184, 98, 0.2);\n    border-bottom: 6px double rgba(248, 184, 98, 0.2);\n    padding: 2%;\n  `;\n\n  const TodoListTitle = styled.h1``;\n\n  const TodoListout = styled.section`\n    border-radius: 5px 5px 0 5px;\n    padding: 5% 0;\n  `;\n\n  return {\n    Body,\n    TodoListContainer,\n    TodoListTitle,\n    TodoListout,\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}